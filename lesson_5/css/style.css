/* ======================================================== */
/* --------------- CSS-властивості блоків ----------------- */
/* ======================================================== */


.block {
	background-color: #77608d;
}
.inline {
	background-color: #7a956b;
}
.inline-block {
	background-color: #794f45;
}

/* Відступи */
/* Відступи неочикувано працюють для рядкових об'єктів */
/* Відступи прийнято задавати для батьківського об'єкту */

/*
padding - Внутрішній відступ. 
Відступи ВСЕРЕДЕНІ об'єкту. 
Від кордонів об'єкту ДО ЙОГО КОНТЕНТУ
НЕ успадковується

padding: з_усіх_сторін;
padding: зверху_знизу зправа_зліва;
padding: зверху зправа_зліва знизу;
padding: зверху зправа знизу зліва;

padding-top: значення;
padding-right: значення;
padding-bottom: значення;
padding-left: значення;

При вказанні значення у відсотках
відсоток береться від ширини батьківського об'єкту,
навіть для горизонтальних відступів 
*/
.block { 
}
.inline {
}
.inline-block {
}

/*
margin - Зовнішній відступ.
Відступи ЗОВНІ об'єкту. 

margin: з_усіх_сторін;
margin: зверху_знизу зправа_зліва;
margin: зверху зправа_зліва знизу;
margin: зверху зправа знизу зліва;

margin-top: значення;
margin-right: значення;
margin-bottom: значення;
margin-left: значення;

Значення можуть бути від'ємними!

*/
.block {
}
.inline {
}
.inline-block {
}
/*
Схлопування margin.
Значання відступу буде дорівнювати 
найбільшому з 2х значеннь.
Відступ margin прийнято записувати з ліва направо
та зверху вниз
*/

.block {
}
/*
.block-2 {
	background-color: yellowgreen;
}
*/
.inline {
}
.inline-block {
}

/*
width - чітко задає ширину блочного (блочно-рядкового) 
об'єкту.
НЕ працює зі рядковими об'єктами
width: значення;
auto- (за замовченням) автоматичний розмір
*/
/*
max-width 
Встановлює максимальну ширину 
блочних (блочно-рядкових) тегів 
Властивість не успадковується 
НЕ працює зі рядковими об'єктами
*/
/*
min-width 
Встановлює мінімальну ширину 
блочних (блочно-рядкових) тегів 
Властивість не успадковується 
НЕ працює зі рядковими об'єктами
*/

.block {
}
.inline {
}
.inline-block {
	/* Гумове зображення */
	/* max-width: 100%; */
}

/*
height 
Встановлює чітку висоту блочних (блочно-рядкових) тегів 
Властивість не успадковується 
НЕ працює зі рядковими об'єктами

min-height 
Встановлює мінімальну висоту 
блочних (блочно-рядкових) тегів 
Властивість не успадковується 
НЕ працює зі рядковими об'єктами

max-height 
Встановлює максимальну 
висоту блочних (блочно-рядкових) тегів 
Властивість не успадковується 
НЕ працює зі рядковими об'єктами
*/

.block {
}
.inline {
}
.inline-block {
}

/*
box-sizing
Застосовується для зміни алгоритму обчислення величин
content-box - (за замовченням) додає відступи
до розміру об'єкту
border-box - значення розмірів враховують відступи
*/
.block {
}
.inline {
}
.inline-block {
}

/*
overflow 
Управляє відображенням контенту блочного елементу
Властивість не успадковується
visible - (за замовченням) Відображається усесь 
контент елемента, навіть за межами встановлених розмірів
hidden - Відображається тільки контент всередені елемента,
clip - Майже теж саме що й hidden.
все інше буде сховано
scroll - Завжди додаються смужки прокрутки
auto - Смужки прокрутки додаються лише за необхідністю

Тільки вертикаль
overflow-y: ; 
Тільки горизонталь
overflow-x: ;
*/
.block {
}
.inline {
}
.inline-block {
}

/*
vertical-align - Визначає вертикальне верівнювання 
рядкових та блочно-рядкових об'єктів.
top
middle
bottom
*/
.block {
}
.inline {
}
.inline-block {
}

/*
display
Багатоцільова властивість яка задає 
глобальні параметри тега. 
Властивість не успадковується
block - (за замовченням для блочних об'ектів) 
Елемент відображається як блочний.
inline - (за замовченням для рядкових об'ектів)  
Елемент відображається як рядковий.
inline-block - (блочно-рядковий) Елемент відображається як 
рядковий але з можливістю 
використання усіх CSS-властивостей.
none - Елемент не виводиться в браузер. 
Інші елементи займають його місце.
Не приймає участь у обробці браузером.
*/
.block {
}
.inline {
}
.inline-block {
	/* 
	Нічого не змінює
	display: inline;
	 */
}

/* Відступи прийнято задавати для батьківського об'єкту */
/* Правильно */
/*
.block {
	margin-bottom: 20px;
}
.block__text {
}
*/
/* НЕ Правильно */
/*
.block {
}
.block__text {
	margin-bottom: 20px;
}
*/

/* Центрування блоку */
/*
1) Об'єкт має бути блочним
2) Об'єкт має мати меньшу ширину за батьківський
3) Додаємо margin: 0 auto;
*/
/*
.block {
	margin: 0 auto;
	max-width: 300px;
}
*/

/* Тег BR */
/* Перевірка на тип */
/* Все ж рядковий */
br {
}

/* Гарний приклад з A */
.section {
	padding: 15px;
	background-color: #7a956b;
}
.text {
	margin-bottom: 10px;
}
/* 
Переводимо рядковий об'єкт A в блочно-рядковий
тоді об'єкт почне займати простір в залежності 
від контенту в ньому та це дозволить застосувати 
зовнішній відступ (margin-bottom)
*/
.link {
	color: yellow;
	margin-bottom: 10px;
	display: inline-block;
}

/* Фантомні (рядкові) відступи */
.list {
	font-size: 0;
}
.list__item {
	font-size: 16px;
	display: inline-block;
	background-color: #77608d;
	padding: 15px;
}
/* --------------------------------------- */

body{
	font-family:"Poppins", sans-serif;
	font-size:14px;
	font-weight:300;
	color: #6C757D;;
}
[class*="page"] {
	max-width: 1270px;
	margin: 0 auto;
}
.page {}
.lives {
	max-width: 816px;
	margin: 0 auto;
}
.title1 {
color: #212529;
font-weight: 700;
font-size: 25px;
margin: 0px 0px 40px 0px;
}
.text1 {
	margin: 0px 0px 40px 0px;
}
.text2 {
	margin: 0px 0px 40px 0px;
}
.text3 {
	margin: 0px 0px 80px 0px;
}
.image1 {
	margin: 0px 0px 80px 0px;
}
.people {max-width: 816px;
	margin: 0 auto;	
}
.title2 {
	font-weight: 700;
	font-size: 25px;
	line-height: 40px;
	color: #212529;
	margin: 0px 0px 40px 0px;
}
.text4 {
	margin: 0px 0px 40px 0px;
}
.text5 {
	margin: 0px 0px 80px 0px;
}
.images {
	max: width 100%;
	margin: 0 auto;
	margin: 0px 0px 80px 0px;
	font-size: 0;
}
.images-002 {}
.images-003 {
	margin-left: 30px;
}
.last {
	max-width: 816px;
	margin: 0 auto;
}
 